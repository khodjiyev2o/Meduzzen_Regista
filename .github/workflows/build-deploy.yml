name: Build and Deploy Code

on: [push, pull_request]
env:
    DATABASE_URL: ${{secrets.DATABASE_URL}}
    POSTGRES_USER: ${{secrets.POSTGRES_USER}}
    POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
    POSTGRES_URL: ${{secrets.POSTGRES_URL}}
    POSTGRES_PORT: ${{secrets.POSTGRES_PORT}}
    POSTGRES_DB: ${{secrets.POSTGRES_DB}}
    SECRET: ${{secrets.SECRET}}
    DOCKER_IMAGE: ghcr.io/${{ github.actor }}/fastapi-auto-deploy
    VERSION: ${{ github.sha }}
    NAME: intern
jobs:
    testing:
      runs-on: ubuntu-latest
      steps:
        - name: pulling git repo
          uses: actions/checkout@v2
        - name: Install python version 3.9
          uses: actions/setup-python@v2
          with:
            python-version: "3.9"
        - name: update pip
          run: python -m pip install --upgrade pip
        - name: install all dependenScies
          run: pip install -r requirements.txt
        - name: test with pytest
          run: |
            pip install pytest
            python3 -m pytest tests/ -v -s 
    build:
      needs: testing
      runs-on: ubuntu-latest
      steps:
        # github repository checkout
        - uses: actions/checkout@v2
        # docker build 
        - name: Set up docker buildx
          id: buildx

          uses: docker/setup-buildx-action@v1
        - name: Cache docker layers
          uses: actions/cache@v2
          with:
            path: /tmp/.buildx-cache
            key: ${{ runner.os }}-buildx-${{ env.VERSION }}
            restore-keys: |
              ${{ runner.os }}-buildx-
        # GitHub to docker registry
        - name: Login to ghcr
          uses: docker/login-action@v1
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GHCR_TOKEN }}
        - name: Build and push
          id: docker_build
          uses: docker/build-push-action@v2
          with:
            builder: ${{ steps.buildx.outputs.name }}
            push: true
            tags: ${{ env.DOCKER_IMAGE }}:latest
    #  Job
    deploy:
      needs: build  # build 
      name: Deploy
      runs-on: self-hosted # AWS ./configure
      steps:
        - name: Login to ghcr
          uses: docker/login-action@v1
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GHCR_TOKEN }}
        # 8000 -> 80 
        - name: Docker run
          run: |
            docker stop ${{ env.NAME }} && docker rm ${{ env.NAME }} && docker rmi ${{ env.DOCKER_IMAGE }}:latest
            docker run -d -t -i -e DATABASE_URL=${{ env.DATABASE_URL }}  -e SECRET=${{ env.SECRET }} \
            -p 80:8000 \
            --name intern  ${{ env.DOCKER_IMAGE }}:latest