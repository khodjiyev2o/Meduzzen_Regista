Тестовое задание:

Написать бекенд для контроля записи пользователей на услуги. Написать web API с набором эндпоинтов, позволяющим контролировать информацию о заведении и его специалистах для администраторов и управляющих, а также записывать клиентов на прием к специалистам

Примеры использования:
запись на прием к врачу, запись на косметологическую процедуру, стрижку, массаж, и т.п. запись на оформление документов

API можно условно разделить на 2 части:
- API для сотрудников:
	- API для администраторов, позволяющая записать человека на свободное время к определенному специалисту
	- API для управляющих, позволяющее создавать специалистов, места и рабочее время для них

- API для пользователей - web API, позволяющее получить список специалистов, время приема специалиста для определенного дня Пользовательский API должен предоставлять следующую информацию
  список специалистов с возможностью фильтрации по их специальности выбор расписания специалиста по дате

Основные сущности:
- Location - место для работы специалиста. В одном месте в одно время может работать только один специалист
- Worker - специалист, предоставляющий услугу
- Schedule - временной отрезок работы специалиста. Для каждого рабочего дня можно устанавливать отдельный отрезок, также в один день можно установить несколько рабочих отрезков (например, с 8:00 до 10:00 и с 17:00 до 21:00 того же дня)
- Appointment - забронированная запись на прием, создаваемая администратором. Запись должна содержать время начала и время конца (разные процедуры могут занимать разное время)


Также, необходимо создать скрипт (или скрипты), позволяющий создать управляющего и администратора для выполнения авторизированных запросов на web API

Будет плюсом:
- Создание frontend части для работы с данными
- Можно использовать любой веб фреймворк на свое усмотрение

На своё усмотрение можно добавить любую функциональность.



####Tuesday
## add a location to worker  //done
## location crud  //done
## update ,create , delete location(filials) //done
## location : name , geo_info //done
## one worker.specialization ,one worker.location //done
## update worker.location , meaning move to another place //done

## Thursday


## specialization
## procedure // done
## Make an Schedule 
## Learn about time in sqlalchemy
## schedule create for one worker , update,delete
## get all workers from one location 
## 